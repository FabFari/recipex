/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-05-27 16:00:31 UTC)
 * on 2016-07-06 at 19:30:55 UTC 
 * Modify at your own risk.
 */

package com.appspot.recipex_1281.recipexServerApi.model;

/**
 * Message to update a Prescription Summary: This message class is intended to update informations
 * of a specific Prescription entity. Attributes: name = Name of the Prescription's drug to take
 * active_ingredient = Datastore id of the Active Ingredient of the Prescription's drug kind = Kind
 * of the Prescription's drug dose = Dose of the Prescription's drug units = Unit of measure of the
 * drug's dose quantity = Number of assumptions per day recipe = Boolean that states if the
 * Prescription's drug need a medical recipe or not pil = URL of the patient information leaflet
 * (PIL) of the Prescription's drug calendarIds = Google Calendar ids of the Prescription's events
 * response = DefaultResponseMessage containing the response
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the recipexServerApi. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MainUpdatePrescriptionMessage extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("active_ingredient") @com.google.api.client.json.JsonString
  private java.lang.Long activeIngredient;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> calendarIds;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long dose;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pil;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long quantity;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean recipe;

  /**
   * A generic response message Summary: This message class is intended for returning a generic
   * response. Attributes: code = HTTP code of the response [REQUIRED] message = Text message of the
   * response [REQUIRED] doOperation = Boolean value to determine if there's an operation to do
   * according to the response payload = Optional textual payload of the response user =
   * RegisterUserMessage of a related invocation
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MainDefaultResponseMessage response;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String units;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getActiveIngredient() {
    return activeIngredient;
  }

  /**
   * @param activeIngredient activeIngredient or {@code null} for none
   */
  public MainUpdatePrescriptionMessage setActiveIngredient(java.lang.Long activeIngredient) {
    this.activeIngredient = activeIngredient;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getCalendarIds() {
    return calendarIds;
  }

  /**
   * @param calendarIds calendarIds or {@code null} for none
   */
  public MainUpdatePrescriptionMessage setCalendarIds(java.util.List<java.lang.String> calendarIds) {
    this.calendarIds = calendarIds;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getDose() {
    return dose;
  }

  /**
   * @param dose dose or {@code null} for none
   */
  public MainUpdatePrescriptionMessage setDose(java.lang.Long dose) {
    this.dose = dose;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * @param kind kind or {@code null} for none
   */
  public MainUpdatePrescriptionMessage setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * @param name name or {@code null} for none
   */
  public MainUpdatePrescriptionMessage setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getPil() {
    return pil;
  }

  /**
   * @param pil pil or {@code null} for none
   */
  public MainUpdatePrescriptionMessage setPil(java.lang.String pil) {
    this.pil = pil;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getQuantity() {
    return quantity;
  }

  /**
   * @param quantity quantity or {@code null} for none
   */
  public MainUpdatePrescriptionMessage setQuantity(java.lang.Long quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRecipe() {
    return recipe;
  }

  /**
   * @param recipe recipe or {@code null} for none
   */
  public MainUpdatePrescriptionMessage setRecipe(java.lang.Boolean recipe) {
    this.recipe = recipe;
    return this;
  }

  /**
   * A generic response message Summary: This message class is intended for returning a generic
   * response. Attributes: code = HTTP code of the response [REQUIRED] message = Text message of the
   * response [REQUIRED] doOperation = Boolean value to determine if there's an operation to do
   * according to the response payload = Optional textual payload of the response user =
   * RegisterUserMessage of a related invocation
   * @return value or {@code null} for none
   */
  public MainDefaultResponseMessage getResponse() {
    return response;
  }

  /**
   * A generic response message Summary: This message class is intended for returning a generic
   * response. Attributes: code = HTTP code of the response [REQUIRED] message = Text message of the
   * response [REQUIRED] doOperation = Boolean value to determine if there's an operation to do
   * according to the response payload = Optional textual payload of the response user =
   * RegisterUserMessage of a related invocation
   * @param response response or {@code null} for none
   */
  public MainUpdatePrescriptionMessage setResponse(MainDefaultResponseMessage response) {
    this.response = response;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUnits() {
    return units;
  }

  /**
   * @param units units or {@code null} for none
   */
  public MainUpdatePrescriptionMessage setUnits(java.lang.String units) {
    this.units = units;
    return this;
  }

  @Override
  public MainUpdatePrescriptionMessage set(String fieldName, Object value) {
    return (MainUpdatePrescriptionMessage) super.set(fieldName, value);
  }

  @Override
  public MainUpdatePrescriptionMessage clone() {
    return (MainUpdatePrescriptionMessage) super.clone();
  }

}
